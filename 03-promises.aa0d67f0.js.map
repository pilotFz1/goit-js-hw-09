{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,qBAC9BE,KAAMH,SAASC,cAAc,oBAC7BG,OAAQJ,SAASC,cAAc,uBAGjCH,EAAKC,KAAKM,iBAAiB,UAE3B,SAAsBC,G,kBAOlBC,YAAW,YAef,SAAuBC,EAAUN,GAC/B,IAAMO,EAAgBC,KAAKC,SAAW,GAYtC,OAXAC,QAAQC,IAAIX,GACI,IAAIY,SAAQ,SAACC,EAASC,GACpCJ,QAAQC,IAAIL,GACZD,YAAW,WACLE,EACFM,EAAQ,uBAAwCE,OAAfT,EAAS,QAAYS,OAANf,EAAM,OAEpDc,EAAK,sBAAuCC,OAAfT,EAAS,QAAYS,OAANf,EAAM,M,GAErDA,E,KAvBDgB,CAFiBC,GACCA,EAAI,GAAKhB,IAAQD,GAEhCkB,MAAK,SAAAC,GACJC,EAAA1B,GAAS2B,OAAOC,QAAQ,GAASP,OAANI,G,IAE5BI,OAAM,SAAAC,GACLJ,EAAA1B,GAAS2B,OAAOI,QAAQ,GAASV,OAANS,G,MAE9BP,EAAIhB,E,EAhBTG,EAAIsB,iBAKJ,IAJA,IAAMxB,EAASN,EAAKM,OAAOiB,MACrBnB,EAAQJ,EAAKI,MAAMmB,MACnBlB,EAAOL,EAAKK,KAAKkB,MAEdQ,EAAI,EAAGA,GAAKzB,EAAQyB,GAAK,EAACC,EAAAD,GAanCvB,EAAIyB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n};\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(evt) {\n  evt.preventDefault();\n  const amount = refs.amount.value;\n  const delay = refs.delay.value;\n  const step = refs.step.value;\n\n  for (let i = 1; i <= amount; i += 1) {\n    setTimeout(() => {\n      const position = i;\n      const newdelay = (i - 1) * step + +delay;\n      createPromise(position, newdelay)\n        .then(value => {\n          Notiflix.Notify.success(`${value}`);\n        })\n        .catch(error => {\n          Notiflix.Notify.failure(`${error}`);\n        });\n    }, i * step);\n  }\n  evt.target.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  console.log(delay);\n  const promise = new Promise((resolve, reject) => {\n    console.log(position);\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n  return promise;\n}\n\n/* Емитация введеных данных */\n/* const amount = 5;\nconst position = 0;\nconst firstDelay = 1000;\nconst delayStep = 1500;\nconst delay = 0; */\n\n/* const refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n}; */\n\n/* setInterval(test, delayStep); */\n/* function createPromise(position, delay) {\n  return new Promise((fulfill, reject) => {\n    for (let i = 0; i < amount; i++) {\n      position++;\n      delay += delayStep;\n\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          fulfill(\n            console.log(`✅ Fulfilled promise ${position} in ${delay}ms`)\n          );\n        } else {\n          reject(console.log(`❌ Rejected promise ${position} in ${delay}ms`));\n        }\n      }, delayStep);\n    }\n  });\n}\n\ncreatePromise(position, delay)\n  .then(sacses => {\n    sacses;\n  })\n\n  .catch(error => {\n    error;\n  });\n */\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","addEventListener","evt","setTimeout","position","shouldResolve","Math","random","console","log","Promise","resolve","reject","concat","$ce04d3a99e08e73b$var$createPromise","i","then","value","$parcel$interopDefault","Notify","success","catch","error","failure","preventDefault","i1","_loop","target","reset"],"version":3,"file":"03-promises.aa0d67f0.js.map"}